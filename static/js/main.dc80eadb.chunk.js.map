{"version":3,"sources":["Images/solid.png","Images/liquid.jpg","Images/organic.jpg","Images/hazardous.jpg","Config/firebase/index.js","Components/SignIn/index.js","Components/GoogleMap/index.js","Screens/UserDashboard/index.js","Config/Routes/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","SigninWithFacebook","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","login","bind","assertThisInitialized","provider","auth","FacebookAuthProvider","signInWithPopup","then","result","user","toJSON","localStorage","setItem","JSON","stringify","userObj","uid","name","displayName","email","createdAt","lastLoginAt","database","ref","concat","set","catch","error","react_default","a","createElement","index_es","variant","color","onClick","React","Component","MyMapComponent","withScriptjs","withGoogleMap","lib","defaultZoom","center","lat","coords","latitude","lng","longitude","isMarkerShown","position","Transition","assign","direction","UserDashboard","submitReport","_this$state","catName","dataUri","phone","description","object","image","push","console","log","getPosition","navigator","geolocation","getCurrentPosition","res","setState","handleClickOpen","open","handleClose","categories","require","openCamera","_this2","onAuthStateChanged","once","data","_this3","_this$state2","classes","className","style","margin","map","value","index","maxWidth","display","component","objectFit","height","title","size","fullScreen","onClose","TransitionComponent","appBar","aria-label","Close_default","flex","mainDiv","infoDiv","label","id","textField","disabled","onChnage","e","target","button","backgroundColor","padding","build_default","imageType","onTakePhoto","GoogleMap","googleMapURL","loadingElement","width","containerElement","mapElement","withStyles","theme","marginLeft","spacing","unit","flexDirection","imageDiv","marginTop","mapDiv","container","flexWrap","marginRight","dense","menu","withTheme","withRouter","Route","exact","path","SignIn","App","parse","getItem","BrowserRouter","Config_Routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc80eadb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/solid.e66ef910.png\";","module.exports = __webpack_public_path__ + \"static/media/liquid.38c9dc4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/organic.50bbcdad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hazardous.62ff95cd.jpg\";","import * as firebase from \"firebase\";\r\nvar config = {\r\n  apiKey: \"AIzaSyBAWpr6BZ5dxh73dEIVI7NeQnXQ0OiQElo\",\r\n  authDomain: \"smart-wastege.firebaseapp.com\",\r\n  databaseURL: \"https://smart-wastege.firebaseio.com\",\r\n  projectId: \"smart-wastege\",\r\n  storageBucket: \"smart-wastege.appspot.com\",\r\n  messagingSenderId: \"790855666642\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport firebase from \"./../../Config/firebase/\";\r\n// import { askForPermissioToReceiveNotifications } from \"../../push-notification\";\r\n\r\nclass SigninWithFacebook extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  login() {\r\n    // console.log(myProps);\r\n    // const props = this.props;\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(function (result) {\r\n        var user = result.user.toJSON();\r\n        localStorage.setItem(\"user\", JSON.stringify(user))\r\n        const userObj = {\r\n          uid: user.uid,\r\n          name: user.displayName,\r\n          email: user.email || null,\r\n          createdAt: user.createdAt,\r\n          lastLoginAt: user.lastLoginAt\r\n        }\r\n        firebase.database().ref(`users/${user.uid}`).set(userObj)\r\n        // console.log(user, \"loginbtn\");\r\n        // askForPermissioToReceiveNotifications();\r\n      })\r\n      .catch(function (error) {\r\n        // var errorCode = error.code;\r\n        // var errorMessage = error.message;\r\n        // var email = error.email;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Button variant=\"contained\" color=\"primary\" onClick={this.login}>Signin with Facebook</Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SigninWithFacebook;\r\n","import React from \"react\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker\r\n} from \"react-google-maps\";\r\n\r\nconst MyMapComponent = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap\r\n      defaultZoom={18}\r\n      center={{ lat: props.coords.latitude, lng: props.coords.longitude }}\r\n    >\r\n      {props.isMarkerShown &&\r\n        props.coords && (\r\n          <Marker\r\n            position={{\r\n              lat: props.coords.latitude,\r\n              lng: props.coords.longitude\r\n            }}\r\n          />\r\n        )}\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nexport default MyMapComponent;","import React, { Component } from \"react\";\r\nimport MyMapComponent from \"../../Components/GoogleMap\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {\r\n  TextField,\r\n  Slide,\r\n  IconButton,\r\n  Toolbar,\r\n  AppBar,\r\n  Dialog,\r\n  Typography,\r\n  Button,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  CardActionArea,\r\n  Card,\r\n  Modal\r\n} from \"@material-ui/core\";\r\n\r\nimport Camera from \"react-html5-camera-photo\";\r\nimport \"react-html5-camera-photo/build/css/index.css\";\r\n\r\nimport base64Img from \"base64-img\";\r\n\r\nimport firebase from \"./../../Config/firebase\";\r\n\r\nimport \"typeface-roboto\";\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  },\r\n  mainDiv: {\r\n    marginLeft: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n\r\n  },\r\n  imageDiv: {\r\n    flex: 1,\r\n    marginTop: 30,\r\n    marginLeft: 80,\r\n    maxWidth: \"300px\",\r\n    height: \"200px\",\r\n    backgroundColor: \"green\"\r\n  },\r\n  infoDiv: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  mapDiv: {\r\n    maxWidth: \"700px\",\r\n    height: \"300px\",\r\n    backgroundColor: \"green\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 300\r\n  },\r\n  dense: {\r\n    marginTop: 19\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n});\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass UserDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      categories: [\r\n        {\r\n          name: \"Solid Waste\",\r\n          image: require(\"../../Images/solid.png\")\r\n        },\r\n        {\r\n          name: \"Liquid Waste\",\r\n          image: require(\"../../Images/liquid.jpg\")\r\n        },\r\n        {\r\n          name: \"Organic Waste\",\r\n          image: require(\"../../Images/organic.jpg\")\r\n        },\r\n        {\r\n          name: \"Hazardous Waste\",\r\n          image: require(\"../../Images/hazardous.jpg\")\r\n        }\r\n      ],\r\n      open: false,\r\n      catName: \"\",\r\n      user: null,\r\n      openCamera: false,\r\n      coords: { latitude: 24.88385439601565, longitude: 67.04778058545844 },\r\n      phone:\"\",\r\n      description:\"\",\r\n      dataUri:\"\"\r\n    };\r\n  }\r\n\r\n  submitReport = ()=>{\r\n    let {user, coords, catName, dataUri, phone, description } = this.state;\r\n    if(user){\r\n      let object = {\r\n        user: user.name,\r\n        catName,\r\n        coords,\r\n        image:dataUri,\r\n        phone,\r\n        description\r\n      }\r\n      firebase.database().ref(`/complaints/${user.uid}/`)\r\n        .push(object).then(()=>{\r\n        console.log('complaint is sent to the admin depart.\\nThank You.')\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  onTakePhoto(dataUri) {\r\n    // Do stuff with the dataUri photo...\r\n    console.log(\"takePhoto\");\r\n    console.log(dataUri);\r\n    this.setState({dataUri})\r\n\r\n    // let storageRef = firebase\r\n    //   .storage()\r\n    //   .ref()\r\n    //   .child(\"images\");\r\n\r\n    // storageRef\r\n    //   .putString(JSON.stringify(dataUri.split(\",\")[1]), \"base64\")\r\n    //   .then(snapshot => {\r\n    //     console.log(\"Uploaded a base64 string!\");\r\n    //   });\r\n    // storageRef.getDownloadURL().then(url => {\r\n    //   this.setState({ image: url });\r\n    //   console.log(url);\r\n    // });\r\n  }\r\n  getPosition=()=> {\r\n    navigator.geolocation.getCurrentPosition(res => {\r\n      this.setState({\r\n        coords: {\r\n          latitude: res.coords.latitude,\r\n          longitude: res.coords.longitude\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  handleClickOpen = catName => {\r\n    this.setState({\r\n      open: true,\r\n      catName\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getPosition();\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.setState({ user });\r\n        firebase\r\n          .database()\r\n          .ref(`/users/${user.uid}`)\r\n          .once(\"value\", data => {\r\n            // console.log(data.val());\r\n        console.log(\"USER IS AVAILABLE\");\r\n      });\r\n      } else {\r\n        this.setState({ user: null });\r\n        console.log(\"USER IS NOT AVAILABLE\");\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { categories, user } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <div style={{ margin: \"80px 3% 3% 3%\" }}>\r\n          {categories.map((value, index) => {\r\n            return (\r\n              <Card\r\n                // className={classes.card}\r\n                style={{ maxWidth: 345, display: \"inline-block\", margin: \"1%\" }}\r\n              >\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    // className={classes.media}\r\n                    style={{ objectFit: \"cover\" }}\r\n                    height=\"160\"\r\n                    image={value.image}\r\n                    title={value.name}\r\n                  />\r\n\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\">{value.name}</Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n\r\n                <CardActions>\r\n                  <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    onClick={() => this.handleClickOpen(value.name)}\r\n                  >\r\n                    Report File\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div>\r\n          <Dialog\r\n            fullScreen\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            TransitionComponent={Transition}\r\n          >\r\n            <AppBar className={classes.appBar}>\r\n              <Toolbar>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  onClick={this.handleClose}\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  color=\"inherit\"\r\n                  className={classes.flex}\r\n                >\r\n                  Report File\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.mainDiv}>\r\n              <div className={classes.infoDiv}>\r\n                <div>\r\n                  <TextField\r\n                    label={user ? \"\":\"Phone\"}\r\n                    id=\"standard-name\"\r\n                    className={classes.textField}\r\n                    margin=\"normal\"\r\n                    value={user?user.name:\"\"}\r\n                    disabled={!user ? true:false}\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    id=\"standard-contact\"\r\n                    label=\"Phone\"\r\n                    className={classes.textField}\r\n                    onChnage={e=>{this.setState({phone:e.target.value})}}\r\n                    margin=\"normal\"\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                    id=\"standard-email\"\r\n                    label=\"Description\"\r\n                    className={classes.textField}\r\n                    margin=\"normal\"\r\n                    onChnage={e=>{this.setState({description:e.target.value})}}                    \r\n                  />\r\n\r\n                  <br />\r\n                  <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={()=>{this.setState({openCamera:true})}}>\r\n                    Take Photo\r\n                  </Button>\r\n                  <Modal open={this.state.openCamera}>\r\n                  <div  style={{backgroundColor:\"white\", padding:\"10px\"}}>\r\n                    <Button color=\"secondary\" variant=\"contained\" onClick={()=>{this.setState({openCamera:false})}}>Close</Button>\r\n                  <Camera\r\n                    imageType=\"IMAGE_TYPES.JPG\"\r\n                    onTakePhoto={dataUri => {\r\n                      this.onTakePhoto(dataUri);\r\n                    }}\r\n                  />\r\n                  </div>\r\n                  </Modal>\r\n                  <MyMapComponent\r\n          coords={this.state.coords}\r\n          isMarkerShown\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\r\n          loadingElement={<div style={{ height: `80%`, width:\"80%\" }} />}\r\n          containerElement={<div style={{ height: `400px` }} />}\r\n          mapElement={<div style={{ height: `80%`, width:\"80%\" }} />}\r\n        />\r\n                </div>\r\n                \r\n                <br />\r\n                <br />\r\n                \r\n              </div>\r\n              \r\n              \r\n\r\n              <div>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ display: \"inline\" }}\r\n                  onClick={this.submitReport}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUserDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(UserDashboard);\r\n","import React from \"react\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\n\r\nimport SignIn from \"./../../Components/SignIn\";\r\nimport UserDashboard from \"./../../Screens/UserDashboard\";\r\n\r\nconst Routes = props => {\r\n  console.log(\"router++\", props);\r\n  return (\r\n    <div>\r\n      {/* <AppBar {...props} /> */}\r\n      <Route exact path=\"/\" component={SignIn} />\r\n      <Route exact path=\"/userDashboard\" component={UserDashboard} />\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Routes);\r\n","import React, { Component } from 'react';\r\nimport Routes from \"./Config/Routes/\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport \"./App.css\"\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      user: JSON.parse(localStorage.getItem(\"user\")) || null\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps() {\r\n    return { user: JSON.parse(localStorage.getItem(\"user\")) }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.user)\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Routes />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// if (module.hot) {\r\n//   module.hot.accept()\r\n// }"],"sourceRoot":""}